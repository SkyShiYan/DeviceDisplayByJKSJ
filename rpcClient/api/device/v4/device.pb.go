// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: api/device/v4/device.proto

package v4

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDeviceByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HardwareKey string `protobuf:"bytes,1,opt,name=hardwareKey,proto3" json:"hardwareKey,omitempty"`
}

func (x *GetDeviceByKeyRequest) Reset() {
	*x = GetDeviceByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceByKeyRequest) ProtoMessage() {}

func (x *GetDeviceByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceByKeyRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceByKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{0}
}

func (x *GetDeviceByKeyRequest) GetHardwareKey() string {
	if x != nil {
		return x.HardwareKey
	}
	return ""
}

type GetDeviceByKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HardwareKey     string `protobuf:"bytes,2,opt,name=hardwareKey,proto3" json:"hardwareKey,omitempty"`
	Defaultlayoutid int32  `protobuf:"varint,3,opt,name=defaultlayoutid,proto3" json:"defaultlayoutid,omitempty"`
	Status          int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Storenumber     string `protobuf:"bytes,5,opt,name=storenumber,proto3" json:"storenumber,omitempty"`
}

func (x *GetDeviceByKeyReply) Reset() {
	*x = GetDeviceByKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceByKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceByKeyReply) ProtoMessage() {}

func (x *GetDeviceByKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceByKeyReply.ProtoReflect.Descriptor instead.
func (*GetDeviceByKeyReply) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeviceByKeyReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeviceByKeyReply) GetHardwareKey() string {
	if x != nil {
		return x.HardwareKey
	}
	return ""
}

func (x *GetDeviceByKeyReply) GetDefaultlayoutid() int32 {
	if x != nil {
		return x.Defaultlayoutid
	}
	return 0
}

func (x *GetDeviceByKeyReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetDeviceByKeyReply) GetStorenumber() string {
	if x != nil {
		return x.Storenumber
	}
	return ""
}

type AddDeviceByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HardwareKey     string `protobuf:"bytes,2,opt,name=hardwareKey,proto3" json:"hardwareKey,omitempty"`
	Defaultlayoutid int32  `protobuf:"varint,3,opt,name=defaultlayoutid,proto3" json:"defaultlayoutid,omitempty"`
	Status          int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Storenumber     string `protobuf:"bytes,5,opt,name=storenumber,proto3" json:"storenumber,omitempty"`
}

func (x *AddDeviceByKeyRequest) Reset() {
	*x = AddDeviceByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceByKeyRequest) ProtoMessage() {}

func (x *AddDeviceByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceByKeyRequest.ProtoReflect.Descriptor instead.
func (*AddDeviceByKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{2}
}

func (x *AddDeviceByKeyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDeviceByKeyRequest) GetHardwareKey() string {
	if x != nil {
		return x.HardwareKey
	}
	return ""
}

func (x *AddDeviceByKeyRequest) GetDefaultlayoutid() int32 {
	if x != nil {
		return x.Defaultlayoutid
	}
	return 0
}

func (x *AddDeviceByKeyRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddDeviceByKeyRequest) GetStorenumber() string {
	if x != nil {
		return x.Storenumber
	}
	return ""
}

type AddDeviceByKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddDeviceByKeyReply) Reset() {
	*x = AddDeviceByKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeviceByKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceByKeyReply) ProtoMessage() {}

func (x *AddDeviceByKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceByKeyReply.ProtoReflect.Descriptor instead.
func (*AddDeviceByKeyReply) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{3}
}

func (x *AddDeviceByKeyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateDeviceByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HardwareKey string `protobuf:"bytes,1,opt,name=hardwareKey,proto3" json:"hardwareKey,omitempty"`
}

func (x *UpdateDeviceByKeyRequest) Reset() {
	*x = UpdateDeviceByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceByKeyRequest) ProtoMessage() {}

func (x *UpdateDeviceByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceByKeyRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceByKeyRequest) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeviceByKeyRequest) GetHardwareKey() string {
	if x != nil {
		return x.HardwareKey
	}
	return ""
}

type UpdateDeviceByKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateDeviceByKeyReply) Reset() {
	*x = UpdateDeviceByKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_device_v4_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceByKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceByKeyReply) ProtoMessage() {}

func (x *UpdateDeviceByKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_v4_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceByKeyReply.ProtoReflect.Descriptor instead.
func (*UpdateDeviceByKeyReply) Descriptor() ([]byte, []int) {
	return file_api_device_v4_device_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceByKeyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_device_v4_device_proto protoreflect.FileDescriptor

var file_api_device_v4_device_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x34, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x34, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x22, 0xaf, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xef, 0x02, 0x0a, 0x06, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x34, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x2f, 0x7b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x7d, 0x12,
	0x6e, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x64,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x34, 0x2e,
	0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x61, 0x64,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x3a, 0x01, 0x2a, 0x12,
	0x7a, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x34,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x34, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x3a, 0x01, 0x2a, 0x42, 0x42, 0x0a, 0x18, 0x64,
	0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x34, 0x42, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x34, 0x50, 0x01, 0x5a, 0x1a, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x34, 0x3b, 0x76, 0x34, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_device_v4_device_proto_rawDescOnce sync.Once
	file_api_device_v4_device_proto_rawDescData = file_api_device_v4_device_proto_rawDesc
)

func file_api_device_v4_device_proto_rawDescGZIP() []byte {
	file_api_device_v4_device_proto_rawDescOnce.Do(func() {
		file_api_device_v4_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_device_v4_device_proto_rawDescData)
	})
	return file_api_device_v4_device_proto_rawDescData
}

var file_api_device_v4_device_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_device_v4_device_proto_goTypes = []interface{}{
	(*GetDeviceByKeyRequest)(nil),    // 0: device.v4.GetDeviceByKeyRequest
	(*GetDeviceByKeyReply)(nil),      // 1: device.v4.GetDeviceByKeyReply
	(*AddDeviceByKeyRequest)(nil),    // 2: device.v4.AddDeviceByKeyRequest
	(*AddDeviceByKeyReply)(nil),      // 3: device.v4.AddDeviceByKeyReply
	(*UpdateDeviceByKeyRequest)(nil), // 4: device.v4.UpdateDeviceByKeyRequest
	(*UpdateDeviceByKeyReply)(nil),   // 5: device.v4.UpdateDeviceByKeyReply
}
var file_api_device_v4_device_proto_depIdxs = []int32{
	0, // 0: device.v4.Device.getDeviceByKey:input_type -> device.v4.GetDeviceByKeyRequest
	2, // 1: device.v4.Device.addDeviceByKey:input_type -> device.v4.AddDeviceByKeyRequest
	4, // 2: device.v4.Device.updateDeviceByKey:input_type -> device.v4.UpdateDeviceByKeyRequest
	1, // 3: device.v4.Device.getDeviceByKey:output_type -> device.v4.GetDeviceByKeyReply
	3, // 4: device.v4.Device.addDeviceByKey:output_type -> device.v4.AddDeviceByKeyReply
	5, // 5: device.v4.Device.updateDeviceByKey:output_type -> device.v4.UpdateDeviceByKeyReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_device_v4_device_proto_init() }
func file_api_device_v4_device_proto_init() {
	if File_api_device_v4_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_device_v4_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v4_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceByKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v4_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v4_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeviceByKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v4_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_device_v4_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceByKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_device_v4_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_device_v4_device_proto_goTypes,
		DependencyIndexes: file_api_device_v4_device_proto_depIdxs,
		MessageInfos:      file_api_device_v4_device_proto_msgTypes,
	}.Build()
	File_api_device_v4_device_proto = out.File
	file_api_device_v4_device_proto_rawDesc = nil
	file_api_device_v4_device_proto_goTypes = nil
	file_api_device_v4_device_proto_depIdxs = nil
}
